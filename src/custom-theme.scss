@use 'sass:map';
@use '@angular/material' as mat;
@use 'sass:meta';
@use 'src/app/styles/colors' as colors;
@use './src/app/styles/variables' as variables;
@use './src/app/styles/font' as font;
@use './src/app/styles/header' as header;
@use './src/app/styles/sidebar' as sidebar;
@use './src/app/styles/settings' as settings;
@use './src/app/styles/footer' as footer;
@use './src/app/styles/themes';
@use './src/app/styles/palettes';
@use './src/app/styles/scrollbar' as scrollbar;
@use './src/app/styles/calendar' as calendar;
@use './src/app/styles/mat-tab' as mat-tab;
@use './src/app/styles/mat-card' as mat-card;
@use './src/app/styles/mat-form-field' as mat-form-field;
@use './src/app/styles/mat-carousel' as mat-carousel;
@use './src/app/styles/typography' as typography;
@use './src/app/styles/notification' as notification;
@use './src/app/styles/full-calendar' as full-calendar;

@include meta.load-css('@fullcalendar/core/main.css');
@include meta.load-css('@fullcalendar/daygrid/main.css');
@include meta.load-css('@fullcalendar/timegrid/main.css');
@include meta.load-css('../node_modules/angular-calendar/css/angular-calendar.css');
@include meta.load-css('../node_modules/ngx-owl-carousel-o/lib/styles/prebuilt-themes/owl.carousel.min.css');
@include meta.load-css('../node_modules/ngx-owl-carousel-o/lib/styles/prebuilt-themes/owl.theme.default.min.css');

// Include the core styles for Angular Material
// We're using the default core which includes styles for both M2 and M3
@include mat.core();

// Define color palettes for M3 theme
$ama-color-config: (
  primary: palettes.$ama-blue,
  tertiary: palettes.$ama-yellow,
  error: palettes.$ama-pink,
);

// Define typography config for M3 theme
$ama-typography-config: (
  plain-family: Roboto,
  brand-family: Roboto,
  bold-weight: 700,
  medium-weight: 500,
  regular-weight: 400,
);

// Create the M3 theme
$ama-m3-theme-config: (
  color: $ama-color-config,
  typography: $ama-typography-config,
);

// Apply the M3 theme
@include mat.theme($ama-m3-theme-config);

// Apply M3 theme to all individual components
@include mat.autocomplete-theme($ama-m3-theme-config);
@include mat.bottom-sheet-theme($ama-m3-theme-config);
@include mat.button-toggle-theme($ama-m3-theme-config);
@include mat.card-theme($ama-m3-theme-config);
@include mat.checkbox-theme($ama-m3-theme-config);
@include mat.datepicker-theme($ama-m3-theme-config);
@include mat.dialog-theme($ama-m3-theme-config);
@include mat.divider-theme($ama-m3-theme-config);
@include mat.expansion-theme($ama-m3-theme-config);
@include mat.form-field-theme($ama-m3-theme-config);
@include mat.grid-list-theme($ama-m3-theme-config);
@include mat.icon-theme($ama-m3-theme-config);
@include mat.input-theme($ama-m3-theme-config);
@include mat.list-theme($ama-m3-theme-config);
@include mat.menu-theme($ama-m3-theme-config);
@include mat.paginator-theme($ama-m3-theme-config);
@include mat.progress-bar-theme($ama-m3-theme-config);
@include mat.progress-spinner-theme($ama-m3-theme-config);
@include mat.select-theme($ama-m3-theme-config);
@include mat.sidenav-theme($ama-m3-theme-config);
@include mat.slide-toggle-theme($ama-m3-theme-config);
@include mat.slider-theme($ama-m3-theme-config);
@include mat.snack-bar-theme($ama-m3-theme-config);
@include mat.sort-theme($ama-m3-theme-config);
@include mat.stepper-theme($ama-m3-theme-config);
@include mat.table-theme($ama-m3-theme-config);
@include mat.tabs-theme($ama-m3-theme-config);
@include mat.toolbar-theme($ama-m3-theme-config);
@include mat.tooltip-theme($ama-m3-theme-config);
@include mat.tree-theme($ama-m3-theme-config);

// Keep M2 palettes for custom components that still use them
$ama-primary: mat.m2-define-palette(palettes.$ama-blue);
$ama-primary-light: mat.m2-define-palette(palettes.$ama-light-blue);
$ama-accent: mat.m2-define-palette(palettes.$ama-yellow);
$ama-warn: mat.m2-define-palette(palettes.$ama-pink);
$ama-success: mat.m2-define-palette(palettes.$ama-green);
$ama-info: mat.m2-define-palette(palettes.$ama-violet);

// Legacy M2 theme function for custom components
@function ama-light-theme($primary, $accent, $warn, $success, $info, $primary-light) {
  $base-theme: mat.m2-define-light-theme(
    (
      color: (
        primary: $primary,
        accent: $accent,
        warn: $warn,
      ),
    )
  );

  @return map.merge(
    $base-theme,
    (
      success: $success,
      info: $info,
      primary-light: $primary-light,
    )
  );
}

/***********************************/
/** Angular Material Admin THEME **/
/**********************************/

// Create legacy M2 theme for custom components
$ama-theme: ama-light-theme($ama-primary, $ama-accent, $ama-warn, $ama-success, $ama-info, $ama-primary-light);

/***********************************/
/**            Badge             **/
/**********************************/

// Apply M3 badge theme with error color variant (default for badges)
@include mat.badge-theme($ama-m3-theme-config);

// For custom badge colors, we'll keep using the M2 approach for now
// Create a custom badge theme that extends the base theme
$ama-badge-theme: ama-light-theme($ama-primary, $ama-accent, $ama-warn, $ama-success, $ama-info, $ama-primary-light);

// Define a custom badge theme mixin that adds support for our custom colors
@mixin custom-badge-theme($theme) {
  $success: map.get($theme, success);
  $info: map.get($theme, info);
  $primary-light: map.get($theme, primary-light);

  // Add custom color variants
  .mat-badge-success {
    .mat-badge-content {
      color: mat.m2-get-color-from-palette($success, default-contrast);
      background: mat.m2-get-color-from-palette($success);
    }
  }

  .mat-badge-info {
    .mat-badge-content {
      color: mat.m2-get-color-from-palette($info, default-contrast);
      background: mat.m2-get-color-from-palette($info);
    }
  }

  .mat-badge-primary-light {
    .mat-badge-content {
      color: mat.m2-get-color-from-palette($primary-light, default-contrast);
      background: mat.m2-get-color-from-palette($primary-light);
    }
  }
}

@include custom-badge-theme($ama-badge-theme);

/***********************************/
/**          Radio Button        **/
/**********************************/

// Apply M3 radio button theme
@include mat.radio-theme($ama-m3-theme-config);

// For custom radio button colors, we'll keep using the M2 approach for now
$ama-radio-button-theme: ama-light-theme(
  $ama-primary,
  $ama-accent,
  $ama-warn,
  $ama-success,
  $ama-info,
  $ama-primary-light
);

// Define a custom radio button theme mixin that customizes the accent color to use success
@mixin custom-radio-theme($theme) {
  $success: map.get($theme, success);

  // Override the accent color to use success
  .mat-mdc-radio-button {
    &.mat-accent {
      &.mat-mdc-radio-checked {
        .mdc-radio__background .mdc-radio__outer-circle {
          border-color: mat.m2-get-color-from-palette($success);
        }

        .mdc-radio__background .mdc-radio__inner-circle {
          border-color: mat.m2-get-color-from-palette($success);
        }
      }

      .mat-ripple-element,
      .mat-mdc-radio-ripple .mat-mdc-focus-indicator::before {
        background-color: mat.m2-get-color-from-palette($success, 0.26);
      }
    }
  }
}

@include custom-radio-theme($ama-radio-button-theme);

/***********************************/
/**             Chip             **/
/**********************************/

// Apply M3 chips theme
@include mat.chips-theme($ama-m3-theme-config);

// For custom chip colors, we'll keep using the M2 approach for now
$ama-chip-theme: ama-light-theme($ama-primary, $ama-accent, $ama-warn, $ama-success, $ama-info, $ama-primary-light);

// Define a custom chips theme mixin that adds support for our custom colors
@mixin custom-chips-theme($theme) {
  $success: map.get($theme, success);
  $info: map.get($theme, info);

  // Add custom color variants for selected chips
  .mat-mdc-chip.mat-mdc-standard-chip.mat-mdc-chip-selected {
    &.mat-success {
      background-color: mat.m2-get-color-from-palette($success);
      color: mat.m2-get-color-from-palette($success, default-contrast);

      .mat-mdc-chip-remove {
        color: mat.m2-get-color-from-palette($success, default-contrast);
        opacity: 0.4;

        &:hover {
          opacity: 0.54;
        }
      }
    }

    &.mat-info {
      background-color: mat.m2-get-color-from-palette($info);
      color: mat.m2-get-color-from-palette($info, default-contrast);

      .mat-mdc-chip-remove {
        color: mat.m2-get-color-from-palette($info, default-contrast);
        opacity: 0.4;

        &:hover {
          opacity: 0.54;
        }
      }
    }
  }
}

@include custom-chips-theme($ama-chip-theme);

/***********************************/
/**           Buttons            **/
/**********************************/

// Apply M3 button themes
@include mat.button-theme($ama-m3-theme-config);
@include mat.fab-theme($ama-m3-theme-config);
@include mat.icon-button-theme($ama-m3-theme-config);

// For custom button colors, we'll keep using the M2 approach for now
$ama-button-theme: ama-light-theme($ama-primary, $ama-accent, $ama-warn, $ama-success, $ama-info, $ama-primary-light);

// Define a custom button theme mixin that adds support for our custom colors
@mixin custom-button-theme($theme) {
  $success: map.get($theme, success);
  $info: map.get($theme, info);

  // Add custom color variants for buttons
  .mat-mdc-button,
  .mat-mdc-raised-button,
  .mat-mdc-outlined-button,
  .mat-mdc-unelevated-button {
    &.mat-success {
      --mdc-protected-button-label-text-color: mat.m2-get-color-from-palette($success);
      --mdc-protected-button-container-color: transparent;
      --mdc-protected-button-outline-color: mat.m2-get-color-from-palette($success);

      &.mat-mdc-raised-button,
      &.mat-mdc-unelevated-button {
        --mdc-protected-button-container-color: mat.m2-get-color-from-palette($success);
        --mdc-protected-button-label-text-color: mat.m2-get-color-from-palette($success, default-contrast);
      }
    }

    &.mat-info {
      --mdc-protected-button-label-text-color: mat.m2-get-color-from-palette($info);
      --mdc-protected-button-container-color: transparent;
      --mdc-protected-button-outline-color: mat.m2-get-color-from-palette($info);

      &.mat-mdc-raised-button,
      &.mat-mdc-unelevated-button {
        --mdc-protected-button-container-color: mat.m2-get-color-from-palette($info);
        --mdc-protected-button-label-text-color: mat.m2-get-color-from-palette($info, default-contrast);
      }
    }
  }
}

@include custom-button-theme($ama-button-theme);

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

@include notification.notification();
@include typography.typography();
@include scrollbar.scrollbar();
@include mat-form-field.mat-form-field();
@include calendar.calendar();
@include full-calendar.full-calendar();
@include themes.blueTheme();
@include themes.pinkTheme();
@include themes.greenTheme();
@include themes.darkMode();
@include mat-tab.mat-tab-label();
@include mat-card.mat-card();

.mat-select-panel .mat-mdc-option.mat-selected:not(.mat-mdc-option-multiple),
.mat-option:hover:not(.mat-option-disabled) {
  background-color: colors.$blue-white;
}

.mat-mdc-select-panel {
  & .mat-mdc-option {
    font-size: 16px !important;
  }
}

.mat-mdc-menu-panel.settings-theme-menu {
  margin-right: 64px;
  margin-top: -55px;
}

.ng-select .ng-select-container {
  min-width: 150px;
  min-height: 40.5px;
}
